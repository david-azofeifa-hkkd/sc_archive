{
    "filename": "ddl_procedure.sql",
    "numb_objects": 7,
    "type": "procedure",
    "type_hex": "",
    "encryption_key_type": "",
    "inventory": [
        {
            "name": "ADD_CUSTOMER",
            "encrypted_name": "null",
            "type": "procedure",
            "database": "STORE_DEMO_DB",
            "encrypted_database": "null",
            "schema": "STORE_DEMO_SCH",
            "encrypted_schema": "null",
            "fully_qualified_name": "STORE_DEMO_DB.STORE_DEMO_SCH.ADD_CUSTOMER",
            "encrypted_fqn": "null",
            "synonyms": [],
            "metadata_analysis": "CREATE OR REPLACE PROCEDURE store_demo_db.store_demo_sch.ADD_CUSTOMER (\n  p_FIRST_NAME IN VARCHAR2,\n  p_LAST_NAME IN VARCHAR2,\n  p_EMAIL IN VARCHAR2,\n  p_ADDRESS IN VARCHAR2,\n  p_PHONE IN NUMBER,\n  p_NEW_CUSTOMER_ID OUT NUMBER\n) AS\nBEGIN\n  INSERT INTO store_demo_db.store_demo_sch.CUSTOMERS (FIRST_NAME, LAST_NAME, EMAIL, ADDRESS, PHONE)\n  VALUES (p_FIRST_NAME, p_LAST_NAME, p_EMAIL, p_ADDRESS, p_PHONE)\n  RETURNING CUSTOMER_ID INTO p_NEW_CUSTOMER_ID;\nEND ADD_CUSTOMER;\n",
            "upstream_dependencies": [],
            "downstream_dependencies": [],
            "dag_location": "null",
            "gantt_location": "null",
            "created_at": "null",
            "updated_at": "null"
        },
        {
            "name": "ADD_PRODUCT",
            "encrypted_name": "null",
            "type": "procedure",
            "database": "STORE_DEMO_DB",
            "encrypted_database": "null",
            "schema": "STORE_DEMO_SCH",
            "encrypted_schema": "null",
            "fully_qualified_name": "STORE_DEMO_DB.STORE_DEMO_SCH.ADD_PRODUCT",
            "encrypted_fqn": "null",
            "synonyms": [],
            "metadata_analysis": "CREATE OR REPLACE PROCEDURE store_demo_db.store_demo_sch.ADD_PRODUCT (\n  p_PRODUCT_NAME IN VARCHAR2,\n  p_DESCRIPTION IN VARCHAR2,\n  p_PRICE IN NUMBER,\n  p_STOCK_QUANTITY IN NUMBER,\n  p_NEW_PRODUCT_ID OUT NUMBER\n) AS\nBEGIN\n  INSERT INTO store_demo_db.store_demo_sch.PRODUCTS (PRODUCT_NAME, DESCRIPTION, PRICE, STOCK_QUANTITY)\n  VALUES (p_PRODUCT_NAME, p_DESCRIPTION, p_PRICE, p_STOCK_QUANTITY)\n  RETURNING PRODUCT_ID INTO p_NEW_PRODUCT_ID;\nEND ADD_PRODUCT;\n",
            "upstream_dependencies": [],
            "downstream_dependencies": [],
            "dag_location": "null",
            "gantt_location": "null",
            "created_at": "null",
            "updated_at": "null"
        },
        {
            "name": "PLACE_ORDER",
            "encrypted_name": "null",
            "type": "procedure",
            "database": "STORE_DEMO_DB",
            "encrypted_database": "null",
            "schema": "STORE_DEMO_SCH",
            "encrypted_schema": "null",
            "fully_qualified_name": "STORE_DEMO_DB.STORE_DEMO_SCH.PLACE_ORDER",
            "encrypted_fqn": "null",
            "synonyms": [],
            "metadata_analysis": "CREATE OR REPLACE PROCEDURE store_demo_db.store_demo_sch.PLACE_ORDER (\n  p_CUSTOMER_ID IN NUMBER,\n  p_ORDER_DATE IN DATE,\n  p_TOTAL IN NUMBER,\n  p_NEW_ORDER_ID OUT NUMBER\n) AS\nBEGIN\n  INSERT INTO store_demo_db.store_demo_sch.ORDERS (CUSTOMER_ID, ORDER_DATE, TOTAL)\n  VALUES (p_CUSTOMER_ID, p_ORDER_DATE, p_TOTAL)\n  RETURNING ORDER_ID INTO p_NEW_ORDER_ID;\nEND PLACE_ORDER;\n",
            "upstream_dependencies": [],
            "downstream_dependencies": [],
            "dag_location": "null",
            "gantt_location": "null",
            "created_at": "null",
            "updated_at": "null"
        },
        {
            "name": "ADD_ORDER_ITEM",
            "encrypted_name": "null",
            "type": "procedure",
            "database": "STORE_DEMO_DB",
            "encrypted_database": "null",
            "schema": "STORE_DEMO_SCH",
            "encrypted_schema": "null",
            "fully_qualified_name": "STORE_DEMO_DB.STORE_DEMO_SCH.ADD_ORDER_ITEM",
            "encrypted_fqn": "null",
            "synonyms": [],
            "metadata_analysis": "CREATE OR REPLACE PROCEDURE store_demo_db.store_demo_sch.ADD_ORDER_ITEM (\n  p_ORDER_ID IN NUMBER,\n  p_PRODUCT_ID IN NUMBER,\n  p_QUANTITY IN NUMBER,\n  p_UNIT_PRICE IN NUMBER,\n  p_NEW_ORDER_ITEM_ID OUT NUMBER\n) AS\nBEGIN\n  INSERT INTO store_demo_db.store_demo_sch.ORDER_ITEMS (ORDER_ID, PRODUCT_ID, QUANTITY, UNIT_PRICE)\n  VALUES (p_ORDER_ID, p_PRODUCT_ID, p_QUANTITY, p_UNIT_PRICE)\n  RETURNING ORDER_ITEM_ID INTO p_NEW_ORDER_ITEM_ID;\nEND ADD_ORDER_ITEM;\n",
            "upstream_dependencies": [],
            "downstream_dependencies": [],
            "dag_location": "null",
            "gantt_location": "null",
            "created_at": "null",
            "updated_at": "null"
        },
        {
            "name": "MAKE_PAYMENT",
            "encrypted_name": "null",
            "type": "procedure",
            "database": "STORE_DEMO_DB",
            "encrypted_database": "null",
            "schema": "STORE_DEMO_SCH",
            "encrypted_schema": "null",
            "fully_qualified_name": "STORE_DEMO_DB.STORE_DEMO_SCH.MAKE_PAYMENT",
            "encrypted_fqn": "null",
            "synonyms": [],
            "metadata_analysis": "CREATE OR REPLACE PROCEDURE store_demo_db.store_demo_sch.MAKE_PAYMENT (\n  p_ORDER_ID IN NUMBER,\n  p_PAYMENT_DATE IN DATE,\n  p_PAYMENT_METHOD IN VARCHAR2,\n  p_AMOUNT IN NUMBER,\n  p_NEW_PAYMENT_ID OUT NUMBER\n) AS\nBEGIN\n  INSERT INTO store_demo_db.store_demo_sch.PAYMENTS (ORDER_ID, PAYMENT_DATE, PAYMENT_METHOD, AMOUNT)\n  VALUES (p_ORDER_ID, p_PAYMENT_DATE, p_PAYMENT_METHOD, p_AMOUNT)\n  RETURNING PAYMENT_ID INTO p_NEW_PAYMENT_ID;\nEND MAKE_PAYMENT;\n",
            "upstream_dependencies": [],
            "downstream_dependencies": [],
            "dag_location": "null",
            "gantt_location": "null",
            "created_at": "null",
            "updated_at": "null"
        },
        {
            "name": "ADD_INVENTORY",
            "encrypted_name": "null",
            "type": "procedure",
            "database": "STORE_DEMO_DB",
            "encrypted_database": "null",
            "schema": "STORE_DEMO_SCH",
            "encrypted_schema": "null",
            "fully_qualified_name": "STORE_DEMO_DB.STORE_DEMO_SCH.ADD_INVENTORY",
            "encrypted_fqn": "null",
            "synonyms": [],
            "metadata_analysis": "CREATE OR REPLACE PROCEDURE store_demo_db.store_demo_sch.ADD_INVENTORY (\n  p_WAREHOUSE_ID IN NUMBER,\n  p_PRODUCT_ID IN NUMBER,\n  p_QUANTITY IN NUMBER,\n  p_NEW_INVENTORY_ID OUT NUMBER\n) AS\nBEGIN\n  INSERT INTO store_demo_db.store_demo_sch.INVENTORY (WAREHOUSE_ID, PRODUCT_ID, QUANTITY)\n  VALUES (p_WAREHOUSE_ID, p_PRODUCT_ID, p_QUANTITY)\n  RETURNING INVENTORY_ID INTO p_NEW_INVENTORY_ID;\nEND ADD_INVENTORY;\n",
            "upstream_dependencies": [],
            "downstream_dependencies": [],
            "dag_location": "null",
            "gantt_location": "null",
            "created_at": "null",
            "updated_at": "null"
        },
        {
            "name": "ADD_WAREHOUSE",
            "encrypted_name": "null",
            "type": "procedure",
            "database": "STORE_DEMO_DB",
            "encrypted_database": "null",
            "schema": "STORE_DEMO_SCH",
            "encrypted_schema": "null",
            "fully_qualified_name": "STORE_DEMO_DB.STORE_DEMO_SCH.ADD_WAREHOUSE",
            "encrypted_fqn": "null",
            "synonyms": [],
            "metadata_analysis": "CREATE OR REPLACE PROCEDURE store_demo_db.store_demo_sch.ADD_WAREHOUSE (\n  p_WAREHOUSE_NAME IN VARCHAR2,\n  p_LOCATION IN VARCHAR2,\n  p_NEW_WAREHOUSE_ID OUT NUMBER\n) AS\nBEGIN\n  INSERT INTO store_demo_db.store_demo_sch.WAREHOUSES (WAREHOUSE_NAME, LOCATION)\n  VALUES (p_WAREHOUSE_NAME, p_LOCATION)\n  RETURNING WAREHOUSE_ID INTO p_NEW_WAREHOUSE_ID;\nEND ADD_WAREHOUSE;\n",
            "upstream_dependencies": [],
            "downstream_dependencies": [],
            "dag_location": "null",
            "gantt_location": "null",
            "created_at": "null",
            "updated_at": "null"
        }
    ]
}