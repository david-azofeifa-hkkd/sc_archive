-- Table Definitions
CREATE TABLE "store_demo_db"."store_demo_sch"."CUSTOMERS" (
  CUSTOMER_ID NUMBER PRIMARY KEY,
  FIRST_NAME VARCHAR2(50) NOT NULL,
  LAST_NAME VARCHAR2(50) NOT NULL,
  EMAIL VARCHAR2(100) UNIQUE NOT NULL,
  ADDRESS VARCHAR2(200),
  PHONE NUMBER
);

CREATE TABLE "store_demo_db"."store_demo_sch"."PRODUCTS" (
  PRODUCT_ID NUMBER PRIMARY KEY,
  PRODUCT_NAME VARCHAR2(100) NOT NULL,
  DESCRIPTION VARCHAR2(200),
  PRICE NUMBER(10, 2) NOT NULL,
  STOCK_QUANTITY NUMBER NOT NULL
);

CREATE TABLE "store_demo_db"."store_demo_sch"."ORDERS" (
  ORDER_ID NUMBER PRIMARY KEY,
  CUSTOMER_ID NUMBER NOT NULL,
  ORDER_DATE DATE NOT NULL,
  TOTAL NUMBER(10, 2) NOT NULL,
  CONSTRAINT FK_ORDERS_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES store_demo_db.store_demo_sch.CUSTOMERS(CUSTOMER_ID)
);

CREATE TABLE "store_demo_db"."store_demo_sch"."ORDER_ITEMS" (
  ORDER_ITEM_ID NUMBER PRIMARY KEY,
  ORDER_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL,
  UNIT_PRICE NUMBER(10, 2) NOT NULL,
  CONSTRAINT FK_ORDER_ITEMS_ORDER FOREIGN KEY (ORDER_ID) REFERENCES store_demo_db.store_demo_sch.ORDERS(ORDER_ID),
  CONSTRAINT FK_ORDER_ITEMS_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES store_demo_db.store_demo_sch.PRODUCTS(PRODUCT_ID)
);

CREATE TABLE "store_demo_db"."store_demo_sch"."PAYMENTS" (
  PAYMENT_ID NUMBER PRIMARY KEY,
  ORDER_ID NUMBER NOT NULL,
  PAYMENT_DATE DATE NOT NULL,
  PAYMENT_METHOD VARCHAR2(50) NOT NULL,
  AMOUNT NUMBER(10, 2) NOT NULL,
  CONSTRAINT FK_PAYMENTS_ORDER FOREIGN KEY (ORDER_ID) REFERENCES store_demo_db.store_demo_sch.ORDERS(ORDER_ID)
);

CREATE TABLE  "store_demo_db"."store_demo_sch"."WAREHOUSES" (
  WAREHOUSE_ID NUMBER PRIMARY KEY,
  WAREHOUSE_NAME VARCHAR2(100) NOT NULL,
  LOCATION VARCHAR2(200) NOT NULL
);

CREATE TABLE  "store_demo_db"."store_demo_sch"."INVENTORY" (
  INVENTORY_ID NUMBER PRIMARY KEY,
  WAREHOUSE_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL,
  CONSTRAINT FK_INVENTORY_WAREHOUSE FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES(WAREHOUSE_ID),
  CONSTRAINT FK_INVENTORY_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);
